Analyse de la table
===================

<?php
global $width, $height, $table, $last;

$table = $last = array();

function ouvrante($phraseur, $name, $attrs)
{
  global $width, $height, $table, $last;

  $last['contenu'] = $name;
  switch ($name) {
  case "table": $width = $attrs['width'];$height = $attrs['height'];break;
  case "tr": $table[] = array(); break;
  case "td": 
    $last['colspan'] = isset($attrs['colspan']) ? $attrs['colspan'] : 1;
    $last['style'] = isset($attrs['style']) ? $attrs['style'] : 'background-color: white';
    break;
  }
}

function fermante($phraseur, $name) {}

function texte($phraseur, $data)
{
  global $last, $table;
  if ($last['contenu'] == 'td') {
      $last['contenu'] = trim($data);
      $table[count($table)-1][] = $last;
  }
}

?> 

Rectangles en SVG
=================

<?php

define('HAUTEUR', 128);
define('EPAISSEUR', 16);

define("RE_COLOR", "@background-color:\s*([^;]+)@");

function rectangle($table)
{
    $res = array();
    $i = 1;
    foreach ($table as $ligne) {
      $k = 0;
      foreach($ligne as $v) {
        if (!preg_match(RE_COLOR, $v['style'], $m))
           return 'style incorrect: ' . $v['style'];
        $res[]= sprintf("\n<rect x='%d' y='-%d' width='%d' height='%ld'
 fill='%s' />",
             $k,
             $i * HAUTEUR,
             $v['colspan'] * EPAISSEUR,
             $v['contenu'],
             $m[1]
);
        $k+=$v['colspan'] * EPAISSEUR;
      }
      $i++;
    }
    return $res;
}

?> 

Envoi d'un SVG
==============

<?php
require_once("rectangle.php");

/*============*/
/* RECTANGLES */
/*============*/
function rectangles ($table,$width,$height)
{
 $svg = rectangle($table);
 if (!is_array($svg))
   echo $svg;
 else
   {
     header("Content-Type: image/svg+xml");
     echo "<!DOCTYPE svg PUBLIC '-//W3C//DTD SVG 1.1//EN'
                                'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'>";
     echo "\n<svg  xmlns='http://www.w3.org/2000/svg' width='$width'
                        height='$height'>";         
     echo "<g transform='translate(10,10),scale(1,-1)'>";
     echo join("\n", $svg);
     echo "</g></svg>";
   }
}

table2svg("test-svg.html","rectangles");
?>

Tu veux un camembert?
=====================

<?php
require_once("rectangle.php");

function camembert($table, $width, $height)
{
 header("Content-Type: image/svg+xml");
 echo "<!DOCTYPE svg PUBLIC '-//W3C//DTD SVG 1.1//EN'
                        'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'>";
 echo "\n<svg  xmlns='http://www.w3.org/2000/svg'
                        xmlns:xlink='http://www.w3.org/1999/xlink'
                        width='$width' height='$height'>";         
 echo "<g transform='translate(10,500),scale(1,-1)'>";

 $i = 0;
 $angle = 0;
 foreach ($table as $ligne)
   {
     echo sprintf("<g transform='translate(%d,%d)'>\n",HAUTEUR + ($i *2 * HAUTEUR), HAUTEUR);
     $x = HAUTEUR;
     $y = 0;
     $k = 0;
     $j = 1;
     foreach($ligne as $v)
        {
        $angle += $v['contenu']*(3.14*2/100);
        $xx = cos($angle) * HAUTEUR;
        $yy = sin($angle) * ( 0 - HAUTEUR);
        if (!preg_match('@background-color:\s*(\w+)@', $v['style'], $m))
          die('style incorrect: ' . $v['style']);
        echo printf("<path d='M0,0 %f %f A%d,%d 0 %d 0 %f %f ' fill='%s'/>\n",$x,$y,HAUTEUR, HAUTEUR,(($v['contenu'] > 50) ? 1 : 0),$xx,$yy,$m[1]);
     $x = $xx;
     $y = $yy;
     $j++;
   }
   $i++;
   echo "</g>";
 }
 echo "</g></svg>";
}

table2svg("test-svg.html", "camembert");

?>
